---
title: ClamAV Add-on for PCF
owner: Security Engineering
---

<strong><%= modified_date %></strong>

This topic describes how to add ClamAV to your Pivotal Cloud Foundry (PCF) deployment.

## <a id="about-clamav"></a>About ClamAV Add-on for PCF

This add-on may be necessary for regulatory purposes if your compliance auditor requires antivirus protection within the PCF environment. 
For example, auditors sometimes expect that antivirus protection be present in an environment that must comply with standards such as 
Payment Card Industry Data Security Standard (PCI DSS) or Health Insurance Portability and Accountability Act (HIPAA).

##<a id="prereqs"></a>Prerequisites

<p class="note"><strong>Note</strong>: ClamAV Add-on for PCF does not work on Windows.</p>

To complete the ClamAV Add-on installation:

* You must be a PCF operator with admin rights. 
For more information, see [Understanding Pivotal Cloud Foundry User Types](https://docs.pivotal.io/pivotalcf/customizing/user-types.html#operator).

* You must have Pivotal Operations Manager (Ops Manager) v1.7 or later.

* ClamAV Add-on uses 610&nbsp;MB of memory. Ensure you have at least 1&nbsp;GB of memory free on each VM before deploying ClamAV Add-on.

* You must set up a local mirror to get ClamAV virus updates.
For instructions on how to set up a local mirror, see [Private Local Mirrors](https://www.clamav.net/documents/private-local-mirrors) in the ClamAV documentation.

##<a id="create-mfest"></a>Create the ClamAV Manifest

The ClamAV manifest is a YML file that contains runtime configuration information for ClamAV Add-on.
Follow the steps below to create the ClamAV manifest for your deployment:

1. Create a file named `clamav.yml`, using the following code as a template.
  <pre>releases:
  \- name: clamav 
      version: 1.0.0
  addons:
  \- name: clamav
      jobs:
      \- name: clamav
        release: clamav
      properties:
        clamav:
          database\_mirror: <%= vars.example_ip_1 %>
</pre>

2. (Required) Provide the hostname or IP address of a private ClamAV update mirror. Environments that cannot connect to the Internet normally use an update mirror. 
If you do not specify a value, ClamAV defaults to an S3-based mirror for updates. For compliance reasons, the S3-based mirror should only be used in non-prod environments.
For instructions on how to set up a local mirror, see [Private Local Mirrors](https://www.clamav.net/documents/private-local-mirrors) in the ClamAV documentation.
See the [Private Local Mirrors](https://www.clamav.net/documents/private-local-mirrors) topic of the ClamAV documentation for instructions on how to set up a local mirror.

3. (Optional) If you have to use a proxy server to connect to the Internet, do the following:
    + Add the `proxy_host` and `proxy_port` properties.
    + If the proxy server needs authentication, add `proxy_user` and `proxy_password` properties.

    Replace the example text shown in bold:  
  <pre>
  releases:
  <span>-</span> name: clamav
      version: 1.1.1
  addons:
    name: clamav
      jobs:
        <span>-</span> name: clamav
          release: clamav
      properties:
        clamav:
          on\_access: no
          scheduled: yes
          proxy\_host: <strong>proxy.localdomain</strong>
          proxy\_port: <strong>3128</strong>
          proxy\_user: <strong>clamav</strong>
          proxy\_password: <strong>secret</strong>
  ...
  </pre>

##<a id="download-deploy"></a>Download and Deploy ClamAV Add-on

1. Download ClamAV Add-on software binary from the [Pivotal Network](https://network.pivotal.io/products/p-clamav-addon) to your local machine.

2. Copy the software binary to your Ops Manager virtual machine (VM).
  <pre class="terminal">$ scp -i PATH/TO/PRIVATE/KEY clamav-release.tar.gz ubuntu@YOUR-OPS-MANAGER-VM-IP:</pre>

3. Copy the ClamAV manifest, `clamav.yml` file, to your Ops Manager instance.
  <pre class="terminal">$ scp -i PATH/TO/PRIVATE/KEY clamav.yml ubuntu@YOUR-OPS-MANAGER-VM-IP:</pre>

4. SSH into Ops Manager.
  <pre class="terminal">$ ssh -i PATH-TO-PRIVATE-KEY ubuntu@YOUR-OPS-MANAGER-VM-IP</pre>

5. On the Ops Manager VM, navigate to the software binary location.
  <pre class="terminal">$ cd PATH-TO-BINARY</pre>

6. On the Ops Manager VM, target your BOSH director instance.
  <pre class="terminal">
  $ bosh target YOUR-OPS-MANAGER-DIRECTOR-IP
  Target set to 'Ops Manager'
  Your username: director
  Enter password: ******************
  Logged in as 'director'
  </pre>

7. Upload your release.
  <pre class="terminal">$ bosh upload release PATH-TO-BINARY/BINARY-NAME.tar</pre>

8. From the command line, confirm that the upload of the ClamAV
software binary completed. You should see the ClamAV release.
  <pre class="terminal">$ bosh releases</pre>

9. <a name="update"></a>Update your runtime configuration to include ClamAV.
  <p class="note"><strong>Note</strong>: If you installed other BOSH add-ons, you must merge the ClamAV manifest into your existing add-on manifest. 
Append the contents of `clamav.yml` to your existing add-on YML file.</p>

    <pre class="terminal">$ bosh update runtime-config PATH/YOUR-ADD-ON-YML.yml</pre>

10. Verify your runtime configuration changes match what you specified in the ClamAV manifest.
  <pre class="terminal">
  $ bosh runtime-config
  Acting as user 'admin' on 'micro'
  releases:
  <span>-</span> name: clamav
      version: 1.0.0
  <br>
  addons:
    name: clamav
      jobs:
        <span>-</span> name: clamav
          release: clamav
  ...
  </pre>

11. Navigate to your Installation Dashboard in Ops Manager.

12. Click **Apply Changes**.

##<a id="alerts"></a> Configure Forwarding for ClamAV Alerts

The ClamAV BOSH release writes all alerts to the syslogs of the VMs in your deployment. You can use syslog forwarding to forward the alerts to a syslog aggregator.

* **Using the Elastic Runtime tile**: Follow the steps to [Configure System Logging](http://docs.pivotal.io/pivotalcf/customizing/cloudform-er-config.html#sys-logging) 
in the Elastic Runtime tile. 
The syslog aggregator that you specify receives all alerts generated on Elastic Runtime VMs, including the ClamAV alerts.
* **Using the BOSH syslog release**: You can use the syslog BOSH release to forward system logs. 
For instructions, see the [syslog-release](https://github.com/cloudfoundry/syslog-release).

<p class="note"><strong>Note</strong>: When you configure syslog forwarding, ensure enough disk space for the logs. 
Make sure that log rotation is frequent enough. If in doubt, rotate the logs hourly or when they reach a certain size. 
Pivotal recommends forwarding logs to a remote syslog aggregation system. </p>

## <a id="verify"></a>Verify Your ClamAV Add-on Installation

1. [BOSH ssh](https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#bosh-ssh) into one of the VMs in your deployment.

1. Run `monit summary`. Look for the following processes in the output:

    <pre class="terminal">The Monit daemon 5.2.4 uptime: 3d 0h 56m
    Process 'clamd'                     running
    Process 'freshclam'                 running</pre>

1. If `monit summary` does not list `freshclamd` and `clamd`, perform the following steps:
  1. Try to start the ClamAV processes by running the following commands:
  <pre class="terminal">
  $ monit start clamd
  $ monit start freshclam
  </pre>
  1. Run `monit summary` again. If you do not see the processes mentioned above, check `/var/vcap/sys/log/clamav` logs for errors.

1. If `monit summary` does list `freshclamd` and `clamd`, create a file on the VM with the following contents:

    ```
    X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*
    ```

    This is a virus signature used to test anti-virus software. Once `clamdscan` completes successfully a notification should appear in `/var/log/messages`.

###<a id="format"></a>Clamav Log Format

ClamAV log format is unstructured. On virus detection, the following text will be sent to syslog:

```
Jul 11 17:36:35 k2lam76scmb clamd[3022]: SelfCheck: Database status OK.
Jul 11 17:42:34 k2lam76scmb clamd[3022]: /bin/infected-file: Eicar-Test-Signature FOUND
```

The logline can be generalized as follows:

```
clamd[PID]: <infected-file-path>: <virus name> FOUND
```

##<a id="setup-on-access"></a>Enable On-Access Scan

ClamAV offers immediate file scanning upon file modification.
This feature might reduce the time it takes to detect and report malware. 
Enable the feature through the `on_access` runtime config property, as follows.

1. In the `clamav.yml` file, add the `on_access` property under the `clamav` property,
   set `on_access` to `yes` and `scheduled` to `no`: 
  <pre>
  releases:
  <span>-</span> name: clamav
      version: 1.1.1
  <br>
  addons:
    name: clamav
      jobs:
        <span>-</span> name: clamav
          release: clamav
      properties:
        clamav:
          <strong>on\_access: yes</strong>
          <strong>scheduled: no</strong>
  ...
  </pre>

1. Apply this configuration change by following the instructions from step 9, [Update your&#8230;](#update), in the [Download and Deploy ClamAV Add-on](#download-deploy) section above.

##<a id="setup-on-access"></a>Disable Scheduled Scan

By default, ClamAV runs a virus scan every hour. You can disable the scan, but you cannot change the frequency.

To enable the periodic scan, follow the steps below.

1. In the `runtime-config`, set the property `scheduled` to <code>no</code>

2. Apply the changes.

##<a id="quarantine"></a>Choose the Action on Infected Files

You can configure ClamAV to take action when infected files are found. 
By default, a notification is sent to the syslog when an infected file is found. 
However, you can specify other actions, as listed in [step 2](#step2) below.

1. In the `clamav.yml` file, add the `action` property under the `clamav` property and, optionally, the `action_destination` property:
  <pre>
  releases:
  <span>-</span> name: clamav
      version: 1.1.7
  <br>
  addons:
    name: clamav
      jobs:
        <span>-</span> name: clamav
          release: clamav
      properties:
        clamav:
          action: <strong>ACTION</strong>
          action_destination: <strong>PATH</strong>
  ...
  </pre>

2. Replace `ACTION` with one of the following values:<a id="step2"></a>
    * `notify` — The default, only send a notification to syslog
    * `remove` — Delete the infected file from the filesystem
    * `move` — Move the infected file to the directory location specified by `action_destination`
    * `copy` — Copy the infected file to the directory location specified by `action_destination`

    If you don't supply an action, the function fails.

3. Replace `PATH` with the directory location where you want the infected files moved or copied to.

    The system does not scan the moved-to or copied-to location. If the directory path is not valid, the function fails.

Example configuration:
  <pre class="terminal">
  releases:
  <span>-</span> name: clamav
      version: 1.1.7
  <br>
  addons:
    name: clamav
      jobs:
        <span>-</span> name: clamav
          release: clamav
      properties:
        clamav:
          action: move
          action_destination: /var/vcap/data/clamav/found
  ...
  </pre>
